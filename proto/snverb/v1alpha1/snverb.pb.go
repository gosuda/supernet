// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/snverb/v1alpha1/snverb.proto

package snverb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	v1alpha1 "gosuda.org/supernet/proto/maddr/v1alpha1"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// SigningAlgorithm defines various cryptographic algorithms used for signatures, encryption, and hashing.
type SignatureAlgorithm int32

const (
	// ED25519 is the Ed25519 digital signature algorithm.
	SignatureAlgorithm_ED25519 SignatureAlgorithm = 0
	// ED448 is the Ed448 digital signature algorithm.
	SignatureAlgorithm_ED448 SignatureAlgorithm = 1
	// MLDSA44 is the ML-DSA-44 digital signature algorithm (NIST PQC).
	SignatureAlgorithm_MLDSA44 SignatureAlgorithm = 2
	// MLDSA65 is the ML-DSA-65 digital signature algorithm (NIST PQC).
	SignatureAlgorithm_MLDSA65 SignatureAlgorithm = 3
	// MLDSA87 is the ML-DSA-87 digital signature algorithm (NIST PQC).
	SignatureAlgorithm_MLDSA87 SignatureAlgorithm = 4
)

// Enum value maps for SignatureAlgorithm.
var (
	SignatureAlgorithm_name = map[int32]string{
		0: "ED25519",
		1: "ED448",
		2: "MLDSA44",
		3: "MLDSA65",
		4: "MLDSA87",
	}
	SignatureAlgorithm_value = map[string]int32{
		"ED25519": 0,
		"ED448":   1,
		"MLDSA44": 2,
		"MLDSA65": 3,
		"MLDSA87": 4,
	}
)

func (x SignatureAlgorithm) Enum() *SignatureAlgorithm {
	p := new(SignatureAlgorithm)
	*p = x
	return p
}

func (x SignatureAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (SignatureAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[0].Descriptor()
}

func (SignatureAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[0]
}

func (x SignatureAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use SignatureAlgorithm.Descriptor instead.
func (SignatureAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{0}
}

type DigestAlgorithm int32

const (
	// SHA256 is the SHA-256 digest algorithm.
	DigestAlgorithm_SHA256 DigestAlgorithm = 0
	// SHA384 is the SHA-384 digest algorithm.
	DigestAlgorithm_SHA384 DigestAlgorithm = 1
	// SHA512 is the SHA-512 digest algorithm.
	DigestAlgorithm_SHA512 DigestAlgorithm = 2
	// SHA3_256 is the SHA3-256 digest algorithm.
	DigestAlgorithm_SHA3_256 DigestAlgorithm = 3
	// SHA3_384 is the SHA3-384 digest algorithm.
	DigestAlgorithm_SHA3_384 DigestAlgorithm = 4
	// SHA3_512 is the SHA3-512 digest algorithm.
	DigestAlgorithm_SHA3_512 DigestAlgorithm = 5
	// BLAKE2B is the BLAKE2b digest algorithm.
	DigestAlgorithm_BLAKE2B DigestAlgorithm = 6
	// BLAKE3 is the BLAKE3 digest algorithm.
	DigestAlgorithm_BLAKE3 DigestAlgorithm = 7
)

// Enum value maps for DigestAlgorithm.
var (
	DigestAlgorithm_name = map[int32]string{
		0: "SHA256",
		1: "SHA384",
		2: "SHA512",
		3: "SHA3_256",
		4: "SHA3_384",
		5: "SHA3_512",
		6: "BLAKE2B",
		7: "BLAKE3",
	}
	DigestAlgorithm_value = map[string]int32{
		"SHA256":   0,
		"SHA384":   1,
		"SHA512":   2,
		"SHA3_256": 3,
		"SHA3_384": 4,
		"SHA3_512": 5,
		"BLAKE2B":  6,
		"BLAKE3":   7,
	}
)

func (x DigestAlgorithm) Enum() *DigestAlgorithm {
	p := new(DigestAlgorithm)
	*p = x
	return p
}

func (x DigestAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DigestAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[1].Descriptor()
}

func (DigestAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[1]
}

func (x DigestAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DigestAlgorithm.Descriptor instead.
func (DigestAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{1}
}

type KeyExchangeAlgorithm int32

const (
	// X25519 is the X25519 elliptic curve Diffie-Hellman key exchange.
	KeyExchangeAlgorithm_X25519 KeyExchangeAlgorithm = 0
	// X448 is the X448 elliptic curve Diffie-Hellman key exchange.
	KeyExchangeAlgorithm_X448 KeyExchangeAlgorithm = 1
	// MLKEM512 is the ML-KEM-512 key encapsulation mechanism (NIST PQC).
	KeyExchangeAlgorithm_MLKEM512 KeyExchangeAlgorithm = 2
	// MLKEM768 is the ML-KEM-768 key encapsulation mechanism (NIST PQC).
	KeyExchangeAlgorithm_MLKEM768 KeyExchangeAlgorithm = 3
	// MLKEM1024 is the ML-KEM-1024 key encapsulation mechanism (NIST PQC).
	KeyExchangeAlgorithm_MLKEM1024 KeyExchangeAlgorithm = 4
)

// Enum value maps for KeyExchangeAlgorithm.
var (
	KeyExchangeAlgorithm_name = map[int32]string{
		0: "X25519",
		1: "X448",
		2: "MLKEM512",
		3: "MLKEM768",
		4: "MLKEM1024",
	}
	KeyExchangeAlgorithm_value = map[string]int32{
		"X25519":    0,
		"X448":      1,
		"MLKEM512":  2,
		"MLKEM768":  3,
		"MLKEM1024": 4,
	}
)

func (x KeyExchangeAlgorithm) Enum() *KeyExchangeAlgorithm {
	p := new(KeyExchangeAlgorithm)
	*p = x
	return p
}

func (x KeyExchangeAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (KeyExchangeAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[2].Descriptor()
}

func (KeyExchangeAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[2]
}

func (x KeyExchangeAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use KeyExchangeAlgorithm.Descriptor instead.
func (KeyExchangeAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{2}
}

type EncryptionAlgorithm int32

const (
	// AES128_GCM is the Advanced Encryption Standard with 128-bit key in Galois/Counter Mode.
	EncryptionAlgorithm_AES128_GCM EncryptionAlgorithm = 0
	// AES256_GCM is the Advanced Encryption Standard with 256-bit key in Galois/Counter Mode.
	EncryptionAlgorithm_AES256_GCM EncryptionAlgorithm = 1
	// CHACHA20_POLY1305 is the ChaCha20-Poly1305 authenticated encryption algorithm.
	EncryptionAlgorithm_CHACHA20_POLY1305 EncryptionAlgorithm = 2
	// XCHACHA20_POLY1305 is the XChaCha20-Poly1305 authenticated encryption algorithm.
	EncryptionAlgorithm_XCHACHA20_POLY1305 EncryptionAlgorithm = 3
)

// Enum value maps for EncryptionAlgorithm.
var (
	EncryptionAlgorithm_name = map[int32]string{
		0: "AES128_GCM",
		1: "AES256_GCM",
		2: "CHACHA20_POLY1305",
		3: "XCHACHA20_POLY1305",
	}
	EncryptionAlgorithm_value = map[string]int32{
		"AES128_GCM":         0,
		"AES256_GCM":         1,
		"CHACHA20_POLY1305":  2,
		"XCHACHA20_POLY1305": 3,
	}
)

func (x EncryptionAlgorithm) Enum() *EncryptionAlgorithm {
	p := new(EncryptionAlgorithm)
	*p = x
	return p
}

func (x EncryptionAlgorithm) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EncryptionAlgorithm) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[3].Descriptor()
}

func (EncryptionAlgorithm) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[3]
}

func (x EncryptionAlgorithm) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EncryptionAlgorithm.Descriptor instead.
func (EncryptionAlgorithm) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{3}
}

// RouterClass enumerates the types of router nodes in the network, indicating their level of functionality and resource requirements.
type RouterClass int32

const (
	RouterClass_FULL_NODE RouterClass = 0 // Full-featured router with complete networking capabilities.
	RouterClass_MINI_NODE RouterClass = 1 // Lightweight router with reduced functionality for smaller scale use.
	RouterClass_NANO_NODE RouterClass = 2 // Minimal router optimized for ultra-low resource environments.
)

// Enum value maps for RouterClass.
var (
	RouterClass_name = map[int32]string{
		0: "FULL_NODE",
		1: "MINI_NODE",
		2: "NANO_NODE",
	}
	RouterClass_value = map[string]int32{
		"FULL_NODE": 0,
		"MINI_NODE": 1,
		"NANO_NODE": 2,
	}
)

func (x RouterClass) Enum() *RouterClass {
	p := new(RouterClass)
	*p = x
	return p
}

func (x RouterClass) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouterClass) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[4].Descriptor()
}

func (RouterClass) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[4]
}

func (x RouterClass) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouterClass.Descriptor instead.
func (RouterClass) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{4}
}

// RouterFeature lists the optional features that a router can support, influencing its role and capabilities in the network.
type RouterFeature int32

const (
	RouterFeature_EXCHANGE RouterFeature = 0 // Supports key exchange operations for secure communication establishment.
	RouterFeature_LEASE    RouterFeature = 1 // Provides address leasing services for dynamic network allocation.
	RouterFeature_RELAY    RouterFeature = 2 // Acts as a relay for forwarding packets through the network.
)

// Enum value maps for RouterFeature.
var (
	RouterFeature_name = map[int32]string{
		0: "EXCHANGE",
		1: "LEASE",
		2: "RELAY",
	}
	RouterFeature_value = map[string]int32{
		"EXCHANGE": 0,
		"LEASE":    1,
		"RELAY":    2,
	}
)

func (x RouterFeature) Enum() *RouterFeature {
	p := new(RouterFeature)
	*p = x
	return p
}

func (x RouterFeature) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RouterFeature) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_snverb_v1alpha1_snverb_proto_enumTypes[5].Descriptor()
}

func (RouterFeature) Type() protoreflect.EnumType {
	return &file_proto_snverb_v1alpha1_snverb_proto_enumTypes[5]
}

func (x RouterFeature) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RouterFeature.Descriptor instead.
func (RouterFeature) EnumDescriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{5}
}

// IdentityKey represents a cryptographic public key with its unique identifier and the signature algorithm used.
type IdentityKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	KeyId         []byte                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 256-bit key id
	Algorithm     SignatureAlgorithm     `protobuf:"varint,2,opt,name=algorithm,proto3,enum=snverb.SignatureAlgorithm" json:"algorithm,omitempty"`
	PublicKey     []byte                 `protobuf:"bytes,3,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IdentityKey) Reset() {
	*x = IdentityKey{}
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IdentityKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IdentityKey) ProtoMessage() {}

func (x *IdentityKey) ProtoReflect() protoreflect.Message {
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IdentityKey.ProtoReflect.Descriptor instead.
func (*IdentityKey) Descriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{0}
}

func (x *IdentityKey) GetKeyId() []byte {
	if x != nil {
		return x.KeyId
	}
	return nil
}

func (x *IdentityKey) GetAlgorithm() SignatureAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return SignatureAlgorithm_ED25519
}

func (x *IdentityKey) GetPublicKey() []byte {
	if x != nil {
		return x.PublicKey
	}
	return nil
}

// Signature contains the signature bytes along with the key ID, signature algorithm, and digest algorithm used for verification.
type Signature struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	KeyId           []byte                 `protobuf:"bytes,1,opt,name=key_id,json=keyId,proto3" json:"key_id,omitempty"` // 256-bit key id
	Algorithm       SignatureAlgorithm     `protobuf:"varint,2,opt,name=algorithm,proto3,enum=snverb.SignatureAlgorithm" json:"algorithm,omitempty"`
	DigestAlgorithm DigestAlgorithm        `protobuf:"varint,3,opt,name=digest_algorithm,json=digestAlgorithm,proto3,enum=snverb.DigestAlgorithm" json:"digest_algorithm,omitempty"`
	Signature       []byte                 `protobuf:"bytes,4,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Signature) Reset() {
	*x = Signature{}
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Signature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Signature) ProtoMessage() {}

func (x *Signature) ProtoReflect() protoreflect.Message {
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Signature.ProtoReflect.Descriptor instead.
func (*Signature) Descriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{1}
}

func (x *Signature) GetKeyId() []byte {
	if x != nil {
		return x.KeyId
	}
	return nil
}

func (x *Signature) GetAlgorithm() SignatureAlgorithm {
	if x != nil {
		return x.Algorithm
	}
	return SignatureAlgorithm_ED25519
}

func (x *Signature) GetDigestAlgorithm() DigestAlgorithm {
	if x != nil {
		return x.DigestAlgorithm
	}
	return DigestAlgorithm_SHA256
}

func (x *Signature) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

// Identity encapsulates a collection of public keys associated with an entity for authentication and verification purposes.
type Identity struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PublicKeys    []*IdentityKey         `protobuf:"bytes,1,rep,name=public_keys,json=publicKeys,proto3" json:"public_keys,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Identity) Reset() {
	*x = Identity{}
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Identity) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Identity) ProtoMessage() {}

func (x *Identity) ProtoReflect() protoreflect.Message {
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Identity.ProtoReflect.Descriptor instead.
func (*Identity) Descriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{2}
}

func (x *Identity) GetPublicKeys() []*IdentityKey {
	if x != nil {
		return x.PublicKeys
	}
	return nil
}

// RouterInfo provides metadata about a router node, including its identity, network addresses, classification, and supported features.
type RouterInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Version       int64                  `protobuf:"varint,1,opt,name=version,proto3" json:"version,omitempty"`                                                    // Version number of the router information for compatibility checking.
	Identity      *Identity              `protobuf:"bytes,2,opt,name=identity,proto3" json:"identity,omitempty"`                                                   // Identity containing the public keys for this router.
	AddressList   *v1alpha1.AddressList  `protobuf:"bytes,3,opt,name=address_list,json=addressList,proto3" json:"address_list,omitempty"`                          // List of network addresses where this router can be reached.
	RouterClass   RouterClass            `protobuf:"varint,4,opt,name=router_class,json=routerClass,proto3,enum=snverb.RouterClass" json:"router_class,omitempty"` // Classification of the router determining its capabilities.
	Features      []RouterFeature        `protobuf:"varint,5,rep,packed,name=features,proto3,enum=snverb.RouterFeature" json:"features,omitempty"`                 // List of features supported by this router node.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RouterInfo) Reset() {
	*x = RouterInfo{}
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RouterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RouterInfo) ProtoMessage() {}

func (x *RouterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_proto_snverb_v1alpha1_snverb_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RouterInfo.ProtoReflect.Descriptor instead.
func (*RouterInfo) Descriptor() ([]byte, []int) {
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP(), []int{3}
}

func (x *RouterInfo) GetVersion() int64 {
	if x != nil {
		return x.Version
	}
	return 0
}

func (x *RouterInfo) GetIdentity() *Identity {
	if x != nil {
		return x.Identity
	}
	return nil
}

func (x *RouterInfo) GetAddressList() *v1alpha1.AddressList {
	if x != nil {
		return x.AddressList
	}
	return nil
}

func (x *RouterInfo) GetRouterClass() RouterClass {
	if x != nil {
		return x.RouterClass
	}
	return RouterClass_FULL_NODE
}

func (x *RouterInfo) GetFeatures() []RouterFeature {
	if x != nil {
		return x.Features
	}
	return nil
}

var File_proto_snverb_v1alpha1_snverb_proto protoreflect.FileDescriptor

const file_proto_snverb_v1alpha1_snverb_proto_rawDesc = "" +
	"\n" +
	"\"proto/snverb/v1alpha1/snverb.proto\x12\x06snverb\x1a proto/maddr/v1alpha1/maddr.proto\"}\n" +
	"\vIdentityKey\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\fR\x05keyId\x128\n" +
	"\talgorithm\x18\x02 \x01(\x0e2\x1a.snverb.SignatureAlgorithmR\talgorithm\x12\x1d\n" +
	"\n" +
	"public_key\x18\x03 \x01(\fR\tpublicKey\"\xbe\x01\n" +
	"\tSignature\x12\x15\n" +
	"\x06key_id\x18\x01 \x01(\fR\x05keyId\x128\n" +
	"\talgorithm\x18\x02 \x01(\x0e2\x1a.snverb.SignatureAlgorithmR\talgorithm\x12B\n" +
	"\x10digest_algorithm\x18\x03 \x01(\x0e2\x17.snverb.DigestAlgorithmR\x0fdigestAlgorithm\x12\x1c\n" +
	"\tsignature\x18\x04 \x01(\fR\tsignature\"@\n" +
	"\bIdentity\x124\n" +
	"\vpublic_keys\x18\x01 \x03(\v2\x13.snverb.IdentityKeyR\n" +
	"publicKeys\"\xf6\x01\n" +
	"\n" +
	"RouterInfo\x12\x18\n" +
	"\aversion\x18\x01 \x01(\x03R\aversion\x12,\n" +
	"\bidentity\x18\x02 \x01(\v2\x10.snverb.IdentityR\bidentity\x125\n" +
	"\faddress_list\x18\x03 \x01(\v2\x12.maddr.AddressListR\vaddressList\x126\n" +
	"\frouter_class\x18\x04 \x01(\x0e2\x13.snverb.RouterClassR\vrouterClass\x121\n" +
	"\bfeatures\x18\x05 \x03(\x0e2\x15.snverb.RouterFeatureR\bfeatures*S\n" +
	"\x12SignatureAlgorithm\x12\v\n" +
	"\aED25519\x10\x00\x12\t\n" +
	"\x05ED448\x10\x01\x12\v\n" +
	"\aMLDSA44\x10\x02\x12\v\n" +
	"\aMLDSA65\x10\x03\x12\v\n" +
	"\aMLDSA87\x10\x04*x\n" +
	"\x0fDigestAlgorithm\x12\n" +
	"\n" +
	"\x06SHA256\x10\x00\x12\n" +
	"\n" +
	"\x06SHA384\x10\x01\x12\n" +
	"\n" +
	"\x06SHA512\x10\x02\x12\f\n" +
	"\bSHA3_256\x10\x03\x12\f\n" +
	"\bSHA3_384\x10\x04\x12\f\n" +
	"\bSHA3_512\x10\x05\x12\v\n" +
	"\aBLAKE2B\x10\x06\x12\n" +
	"\n" +
	"\x06BLAKE3\x10\a*W\n" +
	"\x14KeyExchangeAlgorithm\x12\n" +
	"\n" +
	"\x06X25519\x10\x00\x12\b\n" +
	"\x04X448\x10\x01\x12\f\n" +
	"\bMLKEM512\x10\x02\x12\f\n" +
	"\bMLKEM768\x10\x03\x12\r\n" +
	"\tMLKEM1024\x10\x04*d\n" +
	"\x13EncryptionAlgorithm\x12\x0e\n" +
	"\n" +
	"AES128_GCM\x10\x00\x12\x0e\n" +
	"\n" +
	"AES256_GCM\x10\x01\x12\x15\n" +
	"\x11CHACHA20_POLY1305\x10\x02\x12\x16\n" +
	"\x12XCHACHA20_POLY1305\x10\x03*:\n" +
	"\vRouterClass\x12\r\n" +
	"\tFULL_NODE\x10\x00\x12\r\n" +
	"\tMINI_NODE\x10\x01\x12\r\n" +
	"\tNANO_NODE\x10\x02*3\n" +
	"\rRouterFeature\x12\f\n" +
	"\bEXCHANGE\x10\x00\x12\t\n" +
	"\x05LEASE\x10\x01\x12\t\n" +
	"\x05RELAY\x10\x02B\x83\x01\n" +
	"\n" +
	"com.snverbB\vSnverbProtoP\x01Z0gosuda.org/supernet/proto/snverb/v1alpha1;snverb\xa2\x02\x03SXX\xaa\x02\x06Snverb\xca\x02\x06Snverb\xe2\x02\x12Snverb\\GPBMetadata\xea\x02\x06Snverbb\x06proto3"

var (
	file_proto_snverb_v1alpha1_snverb_proto_rawDescOnce sync.Once
	file_proto_snverb_v1alpha1_snverb_proto_rawDescData []byte
)

func file_proto_snverb_v1alpha1_snverb_proto_rawDescGZIP() []byte {
	file_proto_snverb_v1alpha1_snverb_proto_rawDescOnce.Do(func() {
		file_proto_snverb_v1alpha1_snverb_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_snverb_v1alpha1_snverb_proto_rawDesc), len(file_proto_snverb_v1alpha1_snverb_proto_rawDesc)))
	})
	return file_proto_snverb_v1alpha1_snverb_proto_rawDescData
}

var file_proto_snverb_v1alpha1_snverb_proto_enumTypes = make([]protoimpl.EnumInfo, 6)
var file_proto_snverb_v1alpha1_snverb_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_snverb_v1alpha1_snverb_proto_goTypes = []any{
	(SignatureAlgorithm)(0),      // 0: snverb.SignatureAlgorithm
	(DigestAlgorithm)(0),         // 1: snverb.DigestAlgorithm
	(KeyExchangeAlgorithm)(0),    // 2: snverb.KeyExchangeAlgorithm
	(EncryptionAlgorithm)(0),     // 3: snverb.EncryptionAlgorithm
	(RouterClass)(0),             // 4: snverb.RouterClass
	(RouterFeature)(0),           // 5: snverb.RouterFeature
	(*IdentityKey)(nil),          // 6: snverb.IdentityKey
	(*Signature)(nil),            // 7: snverb.Signature
	(*Identity)(nil),             // 8: snverb.Identity
	(*RouterInfo)(nil),           // 9: snverb.RouterInfo
	(*v1alpha1.AddressList)(nil), // 10: maddr.AddressList
}
var file_proto_snverb_v1alpha1_snverb_proto_depIdxs = []int32{
	0,  // 0: snverb.IdentityKey.algorithm:type_name -> snverb.SignatureAlgorithm
	0,  // 1: snverb.Signature.algorithm:type_name -> snverb.SignatureAlgorithm
	1,  // 2: snverb.Signature.digest_algorithm:type_name -> snverb.DigestAlgorithm
	6,  // 3: snverb.Identity.public_keys:type_name -> snverb.IdentityKey
	8,  // 4: snverb.RouterInfo.identity:type_name -> snverb.Identity
	10, // 5: snverb.RouterInfo.address_list:type_name -> maddr.AddressList
	4,  // 6: snverb.RouterInfo.router_class:type_name -> snverb.RouterClass
	5,  // 7: snverb.RouterInfo.features:type_name -> snverb.RouterFeature
	8,  // [8:8] is the sub-list for method output_type
	8,  // [8:8] is the sub-list for method input_type
	8,  // [8:8] is the sub-list for extension type_name
	8,  // [8:8] is the sub-list for extension extendee
	0,  // [0:8] is the sub-list for field type_name
}

func init() { file_proto_snverb_v1alpha1_snverb_proto_init() }
func file_proto_snverb_v1alpha1_snverb_proto_init() {
	if File_proto_snverb_v1alpha1_snverb_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_snverb_v1alpha1_snverb_proto_rawDesc), len(file_proto_snverb_v1alpha1_snverb_proto_rawDesc)),
			NumEnums:      6,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_snverb_v1alpha1_snverb_proto_goTypes,
		DependencyIndexes: file_proto_snverb_v1alpha1_snverb_proto_depIdxs,
		EnumInfos:         file_proto_snverb_v1alpha1_snverb_proto_enumTypes,
		MessageInfos:      file_proto_snverb_v1alpha1_snverb_proto_msgTypes,
	}.Build()
	File_proto_snverb_v1alpha1_snverb_proto = out.File
	file_proto_snverb_v1alpha1_snverb_proto_goTypes = nil
	file_proto_snverb_v1alpha1_snverb_proto_depIdxs = nil
}
